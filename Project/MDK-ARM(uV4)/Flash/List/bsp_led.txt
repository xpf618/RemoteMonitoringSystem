; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -IH:\进行时\CS_System_Program\Project\MDK-ARM(uV4)\RTE -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=521 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;25     */
;;;26     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;27     {
;;;28     	GPIO_InitTypeDef GPIO_InitStructure;
;;;29     
;;;30     	/* 打开GPIO时钟 */
;;;31     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;32     
;;;33     	/*
;;;34     		配置所有的LED指示灯GPIO为推挽输出模式
;;;35     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;36     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;37     	*/
;;;38     	bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;39     	bsp_LedOff(2);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       bsp_LedOff
;;;40     	bsp_LedOff(3);
000016  2003              MOVS     r0,#3
000018  f7fffffe          BL       bsp_LedOff
;;;41     	bsp_LedOff(4);
00001c  2004              MOVS     r0,#4
00001e  f7fffffe          BL       bsp_LedOff
;;;42     
;;;43     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0002          STRB     r0,[sp,#2]
;;;44     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000028  2010              MOVS     r0,#0x10
00002a  f88d0003          STRB     r0,[sp,#3]
;;;45     	
;;;46     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00002e  0240              LSLS     r0,r0,#9
000030  f8ad0000          STRH     r0,[sp,#0]
;;;47     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  480e              LDR      r0,|L1.112|
000038  f7fffffe          BL       GPIO_Init
;;;48     
;;;49     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
00003c  f44f5000          MOV      r0,#0x2000
000040  f8ad0000          STRH     r0,[sp,#0]
;;;50     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
000044  4669              MOV      r1,sp
000046  480a              LDR      r0,|L1.112|
000048  f7fffffe          BL       GPIO_Init
;;;51     
;;;52     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
00004c  f44f5000          MOV      r0,#0x2000
000050  f8ad0000          STRH     r0,[sp,#0]
;;;53     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
000054  4669              MOV      r1,sp
000056  4806              LDR      r0,|L1.112|
000058  f7fffffe          BL       GPIO_Init
;;;54     
;;;55     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
00005c  f44f5000          MOV      r0,#0x2000
000060  f8ad0000          STRH     r0,[sp,#0]
;;;56     	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
000064  4669              MOV      r1,sp
000066  4802              LDR      r0,|L1.112|
000068  f7fffffe          BL       GPIO_Init
;;;57     }
00006c  bd08              POP      {r3,pc}
;;;58     
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x40011000

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;154    */
;;;155    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;156    {
;;;157    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;158    	{
;;;159    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4816              LDR      r0,|L2.96|
000008  68c0              LDR      r0,[r0,#0xc]
00000a  f4005000          AND      r0,r0,#0x2000
00000e  b908              CBNZ     r0,|L2.20|
;;;160    		{
;;;161    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;162    		}
;;;163    		return 0;
;;;164    	}
;;;165    	else if (_no == 2)
;;;166    	{
;;;167    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;168    		{
;;;169    			return 1;
;;;170    		}
;;;171    		return 0;
;;;172    	}
;;;173    	else if (_no == 3)
;;;174    	{
;;;175    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;176    		{
;;;177    			return 1;
;;;178    		}
;;;179    		return 0;
;;;180    	}
;;;181    	else if (_no == 4)
;;;182    	{
;;;183    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;184    		{
;;;185    			return 1;
;;;186    		}
;;;187    		return 0;
;;;188    	}
;;;189    
;;;190    	return 0;
;;;191    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;163
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;165
00001a  d108              BNE      |L2.46|
00001c  4810              LDR      r0,|L2.96|
00001e  68c0              LDR      r0,[r0,#0xc]          ;167
000020  f4005000          AND      r0,r0,#0x2000         ;167
000024  b908              CBNZ     r0,|L2.42|
000026  2001              MOVS     r0,#1                 ;169
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;171
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;173
000030  d108              BNE      |L2.68|
000032  480b              LDR      r0,|L2.96|
000034  68c0              LDR      r0,[r0,#0xc]          ;175
000036  f4005000          AND      r0,r0,#0x2000         ;175
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;177
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;179
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2904              CMP      r1,#4                 ;181
000046  d108              BNE      |L2.90|
000048  4805              LDR      r0,|L2.96|
00004a  68c0              LDR      r0,[r0,#0xc]          ;183
00004c  f4005000          AND      r0,r0,#0x2000         ;183
000050  b908              CBNZ     r0,|L2.86|
000052  2001              MOVS     r0,#1                 ;185
000054  e7dd              B        |L2.18|
                  |L2.86|
000056  2000              MOVS     r0,#0                 ;187
000058  e7db              B        |L2.18|
                  |L2.90|
00005a  2000              MOVS     r0,#0                 ;190
00005c  e7d9              B        |L2.18|
;;;192    
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      0x40011000

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;96     */
;;;97     void bsp_LedOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;98     {
;;;99     	_no--;
000002  b2c8              UXTB     r0,r1
;;;100    
;;;101    	if (_no == 0)
000004  b920              CBNZ     r0,|L3.16|
;;;102    	{
;;;103    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000006  f44f5100          MOV      r1,#0x2000
00000a  4a0b              LDR      r2,|L3.56|
00000c  6111              STR      r1,[r2,#0x10]
00000e  e011              B        |L3.52|
                  |L3.16|
;;;104    	}
;;;105    	else if (_no == 1)
000010  2801              CMP      r0,#1
000012  d103              BNE      |L3.28|
;;;106    	{
;;;107    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000014  0341              LSLS     r1,r0,#13
000016  4a08              LDR      r2,|L3.56|
000018  6111              STR      r1,[r2,#0x10]
00001a  e00b              B        |L3.52|
                  |L3.28|
;;;108    	}
;;;109    	else if (_no == 2)
00001c  2802              CMP      r0,#2
00001e  d103              BNE      |L3.40|
;;;110    	{
;;;111    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
000020  0301              LSLS     r1,r0,#12
000022  4a05              LDR      r2,|L3.56|
000024  6111              STR      r1,[r2,#0x10]
000026  e005              B        |L3.52|
                  |L3.40|
;;;112    	}
;;;113    	else if (_no == 3)
000028  2803              CMP      r0,#3
00002a  d103              BNE      |L3.52|
;;;114    	{
;;;115    		GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
00002c  f44f5100          MOV      r1,#0x2000
000030  4a01              LDR      r2,|L3.56|
000032  6111              STR      r1,[r2,#0x10]
                  |L3.52|
;;;116    	}
;;;117    }
000034  4770              BX       lr
;;;118    
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x40011000

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;66     */
;;;67     void bsp_LedOn(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;68     {
;;;69     	_no--;
000002  b2c8              UXTB     r0,r1
;;;70     
;;;71     	if (_no == 0)
000004  b920              CBNZ     r0,|L4.16|
;;;72     	{
;;;73     		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000006  f44f5100          MOV      r1,#0x2000
00000a  4a0b              LDR      r2,|L4.56|
00000c  6151              STR      r1,[r2,#0x14]
00000e  e011              B        |L4.52|
                  |L4.16|
;;;74     	}
;;;75     	else if (_no == 1)
000010  2801              CMP      r0,#1
000012  d103              BNE      |L4.28|
;;;76     	{
;;;77     		GPIO_PORT_LED2->BRR = GPIO_PIN_LED2;
000014  0341              LSLS     r1,r0,#13
000016  4a08              LDR      r2,|L4.56|
000018  6151              STR      r1,[r2,#0x14]
00001a  e00b              B        |L4.52|
                  |L4.28|
;;;78     	}
;;;79     	else if (_no == 2)
00001c  2802              CMP      r0,#2
00001e  d103              BNE      |L4.40|
;;;80     	{
;;;81     		GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
000020  0301              LSLS     r1,r0,#12
000022  4a05              LDR      r2,|L4.56|
000024  6151              STR      r1,[r2,#0x14]
000026  e005              B        |L4.52|
                  |L4.40|
;;;82     	}
;;;83     	else if (_no == 3)
000028  2803              CMP      r0,#3
00002a  d103              BNE      |L4.52|
;;;84     	{
;;;85     		GPIO_PORT_LED4->BRR = GPIO_PIN_LED4;
00002c  f44f5100          MOV      r1,#0x2000
000030  4a01              LDR      r2,|L4.56|
000032  6151              STR      r1,[r2,#0x14]
                  |L4.52|
;;;86     	}
;;;87     }
000034  4770              BX       lr
;;;88     
                          ENDP

000036  0000              DCW      0x0000
                  |L4.56|
                          DCD      0x40011000

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;126    */
;;;127    void bsp_LedToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;128    {
;;;129    	if (_no == 1)
000002  d106              BNE      |L5.18|
;;;130    	{
;;;131    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  4910              LDR      r1,|L5.72|
000006  68c9              LDR      r1,[r1,#0xc]
000008  f4815100          EOR      r1,r1,#0x2000
00000c  4a0e              LDR      r2,|L5.72|
00000e  60d1              STR      r1,[r2,#0xc]
000010  e019              B        |L5.70|
                  |L5.18|
;;;132    	}
;;;133    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L5.36|
;;;134    	{
;;;135    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
000016  490c              LDR      r1,|L5.72|
000018  68c9              LDR      r1,[r1,#0xc]
00001a  f4815100          EOR      r1,r1,#0x2000
00001e  4a0a              LDR      r2,|L5.72|
000020  60d1              STR      r1,[r2,#0xc]
000022  e010              B        |L5.70|
                  |L5.36|
;;;136    	}
;;;137    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d106              BNE      |L5.54|
;;;138    	{
;;;139    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000028  4907              LDR      r1,|L5.72|
00002a  68c9              LDR      r1,[r1,#0xc]
00002c  f4815100          EOR      r1,r1,#0x2000
000030  4a05              LDR      r2,|L5.72|
000032  60d1              STR      r1,[r2,#0xc]
000034  e007              B        |L5.70|
                  |L5.54|
;;;140    	}
;;;141    	else if (_no == 4)
000036  2804              CMP      r0,#4
000038  d105              BNE      |L5.70|
;;;142    	{
;;;143    		GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
00003a  4903              LDR      r1,|L5.72|
00003c  68c9              LDR      r1,[r1,#0xc]
00003e  f4815100          EOR      r1,r1,#0x2000
000042  4a01              LDR      r2,|L5.72|
000044  60d1              STR      r1,[r2,#0xc]
                  |L5.70|
;;;144    	}
;;;145    }
000046  4770              BX       lr
;;;146    
                          ENDP

                  |L5.72|
                          DCD      0x40011000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
